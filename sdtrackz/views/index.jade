//- index.jade.
    Based on Google's App Engine demos.

doctype html
html(lang="en")
  head
    title Motion tracking client
    meta(charset="utf-8")
  //- [START form]
  body(data-external-ip=externalIp)
    p This is your lance. Lance it up, bro

    div
      p Status:
      pre(id="status")
    //- [END form]

    script(src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js")
    script.
      // [START js]
      $(function() {
        //- The external ip is determined by app.js and passed into the template.
        var webSocketHost = location.protocol === 'https:' ? 'wss://' : 'ws://';
        var externalIp = $('body').data('external-ip');
        var webSocketUri =  webSocketHost + externalIp + ':65080/serve';

        //- Get elements from the page.
        var status = $('#status');

        //- Helper to keep an activity log on the page.
        function log(text){
          status.text(text + '\n' + status.text());
        }
        
        log(webSocketUri);
        
        function handleMotionEvent(event) {
          var acceleration = "a" + [
            (Math.round(event.acceleration.x * 100) / 100).toString(),
            (Math.round(event.acceleration.y * 100) / 100).toString(),
            (Math.round(event.acceleration.z * 100) / 100).toString(),
            Date.now().toString()].join();
          websocket.send(acceleration);
        }
      
        function deviceOrientationListener(event) {
          var orientation = "o" + [
            (Math.round(event.alpha * 100) / 100).toString(),
            (Math.round(event.beta * 100) / 100).toString(),
            (Math.round(event.gamma * 100) / 100).toString(),
            Date.now().toString()].join();
          websocket.send(orientation);
        }
        
        log('Loading all the websocket stuff. Please stand by...')

        //- Establish the WebSocket connection and register event handlers.
        var websocket = new WebSocket(webSocketUri);

        websocket.onopen = function() {
          log("Connected. Let's GO");
          
          //- Motion setup.
          if (window.DeviceMotionEvent) {
            window.addEventListener("devicemotion", handleMotionEvent, true);
          } else {
            log("Sorry, your browser doesn't support Device Motion. (WTF man?)");
          }
          
          //- Orientation setup.
          if (window.DeviceOrientationEvent) {
            window.addEventListener("deviceorientation", deviceOrientationListener);
          } else {
            log("Sorry, your browser doesn't support Device Orientation. (WTF man?)");
          }
        };

        websocket.onclose = function() {
          log('Closed.');
        };
        
        websocket.onmessage = function(e) {
          // Uncomment to view acceleration and orientation values.
          // log(e.data);
        };

        websocket.onerror = function(e) {
          log('Error (see console).');
          console.log(e);
        };
      });
      // [END js]
